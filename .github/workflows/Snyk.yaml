name: Snyk Scan

on:
  pull_request:
    branches:
      - main
      
  push:
    branches:
      - main
     
jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - name: Snyk SCA Scanning
        continue-on-error: true
        run: |
         echo "----------Download Latest Snyk CLI-----------"
         curl -Lo ./snyk "https://github.com/snyk/snyk/releases/download/v1.1060.0/snyk-linux"
         chmod +x snyk
          ls -lrt
          snykcount=$(curl -X GET --header 'Content-Type: application/json' --header 'Authorization: token 66cc1ca1-202d-4058-89a7-4cb2ee9c5393' 'https://api.snyk.io/api/v1/org/b75daed6-3330-4723-b097-ed83f67917b4/project/0c204406-4008-493a-9ac9-67eaba4c332f')
          Dependenciesscanned=$(echo "$snykcount" | jq .totalDependencies )
          echo "DependencyCount = $Dependenciesscanned"
          CRITICAL=$(echo "$snykcount" | jq .issueCountsBySeverity.critical )
          HIGH=$(echo "$snykcount" | jq .issueCountsBySeverity.high )
          MEDIUM=$(echo "$snykcount" | jq .issueCountsBySeverity.medium )
          LOW=$(echo "$snykcount" | jq .issueCountsBySeverity.low )
          echo "Critical = $CRITICAL"
          echo "High = $HIGH"
          echo "Medium = $MEDIUM"
          echo "Low = $LOW"
          if [ $CRITICAL -gt 0 ] 
          then 
          echo "Failing the task because there are critical vulnerabilities"
          exit 1
          elif [ $HIGH -gt 0 ]
          then 
          echo "Failing the task because there are high vulnerabilities"
          exit 1
          elif [ $MEDIUM -gt 10 ]
          then 
          echo "Failing the task because number of medium issues are greater than 10"
          exit 1
          else 
          echo "PASSED"
          fi

          
